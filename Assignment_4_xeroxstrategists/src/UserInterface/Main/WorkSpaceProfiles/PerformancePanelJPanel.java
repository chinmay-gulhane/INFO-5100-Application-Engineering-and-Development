/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Main.WorkSpaceProfiles;

import TheBusiness.Business.Business;
import TheBusiness.OrderManagement.MasterOrderList;
import TheBusiness.SolutionOrders.MasterSolutionOrderList;
import TheBusiness.SolutionOrders.SolutionOrder;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JPanel;

/**
 *
 * @author samik
 */
public class PerformancePanelJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PerformancePanelJPanel
     */


    PerformancePanelJPanel(Business business, JPanel CardSequencePanel) {
       initComponents();
               Map<String, Map<String, Integer>> marketProfitMap = new HashMap<>();
               MasterSolutionOrderList m = business.getMasterSolutionOrderList();
        for (SolutionOrder order : m.getSolutionorderlist()) {
            int profit = (order.getSellingPrice() - order.getTargetPrice()) * (order.getQuantity());
            String marketName = order.getMarketName();
            String solutionOfferName = order.getSolutionOfferName();
            marketProfitMap
                    .computeIfAbsent(marketName, k -> new HashMap<>())
                    .merge(solutionOfferName, profit, Integer::sum);
        }
        for (Map.Entry<String, Map<String, Integer>> entry : marketProfitMap.entrySet()) {
            String marketName = entry.getKey();
            Map<String, Integer> solutionProfits = entry.getValue();

            // Create a list of solutionOfferNames sorted by profit in descending order
            List<String> topThreeSolutionOffers = new ArrayList<>(solutionProfits.keySet());
            topThreeSolutionOffers.sort((a, b) -> Integer.compare(solutionProfits.get(b), solutionProfits.get(a)));

            // Print the top 3 solutionOfferNames for each market
            System.out.println("Market: " + marketName);
            for (int i = 0; i < Math.min(3, topThreeSolutionOffers.size()); i++) {
                String solutionOffer = topThreeSolutionOffers.get(i);
                int accumulatedProfit = solutionProfits.get(solutionOffer);
                System.out.println("  Solution Offer: " + solutionOffer + ", Accumulated Profit: " + accumulatedProfit);
                String s = "  Solution Offer: " + solutionOffer + ", Accumulated Profit: " + accumulatedProfit;
                textArea1.setText(s);
            }
        }
        
        String k="";
        List<String> top3customerNames = null;
        Map<String, Integer> customerProfits = new HashMap<>();
        for (SolutionOrder order : m.getSolutionorderlist()) {
            int profit = (order.getSellingPrice() - order.getTargetPrice()) * (order.getQuantity());
            String customerName = order.getCustomerName();
            customerProfits.put(customerName, customerProfits.getOrDefault(customerName, 0) + profit);

            List<String> customerNames = new ArrayList<>(customerProfits.keySet());

            Collections.sort(customerNames, (a, b) -> Integer.compare(customerProfits.get(b), customerProfits.get(a)));
            top3customerNames = customerNames.subList(0, Math.min(3, customerNames.size()));
        }
        for (int i = 0; i < top3customerNames.size(); i++) {
            System.out.println(top3customerNames.get(i) + " Total Profits "
                    + customerProfits.get(top3customerNames.get(i)));
            k = k+top3customerNames.get(i) + " Total Profits "
                    + customerProfits.get(top3customerNames.get(i));
        }
        textArea2.setText(k);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        textArea4 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        textArea5 = new javax.swing.JTextArea();

        jLabel1.setText("Our top 3 best negotiated solutions (meaning solutions that sell above target) broken  down by market segments: ");

        jLabel3.setText("Our 3 best customers (customers who buy about target price)");

        jLabel5.setText("Our top 3 best sales people (sell higher that target)");

        jLabel6.setText("Our total marginal revenue broken down by market that is above or below expected  target (actual minus target)");

        jLabel7.setText("Determine if the company is pricing its solutions correctly. Show how to update price  ranges so prices perform at optimum levels (higher and lower targets)");

        textArea1.setColumns(20);
        textArea1.setRows(5);
        jScrollPane1.setViewportView(textArea1);

        textArea2.setColumns(20);
        textArea2.setRows(5);
        jScrollPane2.setViewportView(textArea2);

        textArea3.setColumns(20);
        textArea3.setRows(5);
        jScrollPane3.setViewportView(textArea3);

        textArea4.setColumns(20);
        textArea4.setRows(5);
        jScrollPane4.setViewportView(textArea4);

        textArea5.setColumns(20);
        textArea5.setRows(5);
        jScrollPane5.setViewportView(textArea5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1513, 1513, 1513))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(351, 351, 351))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(27, 27, 27)))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(708, 708, 708)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel7))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea textArea1;
    private javax.swing.JTextArea textArea2;
    private javax.swing.JTextArea textArea3;
    private javax.swing.JTextArea textArea4;
    private javax.swing.JTextArea textArea5;
    // End of variables declaration//GEN-END:variables
}
