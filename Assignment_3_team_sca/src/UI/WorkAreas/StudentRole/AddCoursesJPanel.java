/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.WorkAreas.StudentRole;

import Education.Courses.Course;
import Education.Courses.CourseSchedule;
import Education.Education;
import Education.Professor.Professor;
import Education.Student.Student;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author samik
 */
public class AddCoursesJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Education education;
    private Student student;
    private String selectedTerm;

    /**
     * Creates new form AddCoursesJPanel
     */
    AddCoursesJPanel(JPanel userProcessContainer, Education education, Student student, String selectedTerm) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.education = education;
        this.student = student;
        this.selectedTerm = selectedTerm;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblViewCourse.getModel();
        dtm.setRowCount(0);
        for (CourseSchedule cs : education.getCourseScheduleDirectory().getCourseScheduleList()) {
            if(student.getGrades().containsKey(cs.getScheduleId())){
                continue;
            }
            if ((cs.getTerm() + " " + cs.getYear()).equals(selectedTerm)) {
                for (Course c : education.getCourseDirectory().getCourseList()) {
                    for (Professor p : education.getProfessorsDirectory().getProfessorList()) {
                        if (p.getProfessorId().equals(cs.getTeachingProfessorId())) {
                            if (cs.getCourseId().equals(c.getCourseId())) {
                                Object[] row = new Object[9];
                                row[0] = cs;
                                row[1] = c;
                                row[2] = c.getTopic();
                                row[3] = c.getName();
                                row[4] = p.getName();
                                row[5] = cs.getStartDate();
                                row[6] = cs.getTeachingProfessorRating();
                                row[7] = cs.getRegion();
                                row[8] = cs.getLanguage();
                                dtm.addRow(row);
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewCourse = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblWelcomeAdmin = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        tblViewCourse.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tblViewCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Schedule Id", "Course Id", "Course Topic", "Course Name", "Professor Name", "Schedule", "Professor Rating", "Region", "Language"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewCourse);

        btnSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnSearch.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(0, 0, 0));
        btnReset.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset Search");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setText("Find Course");

        btnAdd.setBackground(new java.awt.Color(0, 0, 0));
        btnAdd.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblWelcomeAdmin.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        lblWelcomeAdmin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcomeAdmin.setText("Add Courses");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnSearch)
                        .addGap(30, 30, 30)
                        .addComponent(btnReset)
                        .addContainerGap(146, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(30, 30, 30)
                        .addComponent(btnBack)
                        .addGap(50, 50, 50))))
            .addComponent(lblWelcomeAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblWelcomeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnReset)
                    .addComponent(jLabel1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnBack))
                .addGap(54, 54, 54))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if(txtSearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill search text field before processing.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        populateSearch(txtSearch.getText());
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblViewCourse.getSelectedRow();
        if (selectedRow >= 0) {
            CourseSchedule sc = (CourseSchedule) tblViewCourse.getValueAt(selectedRow, 0);
            if(student.getGrades().containsKey(sc.getCourseId())){
                JOptionPane.showMessageDialog(this, "You have already undertook this course.!");
                return;
            }
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to add the course", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                student.getGrades().put(sc.getScheduleId(), 0.0);
                populateTable();
            }
            int credit= 0;
            for(Course course: education.getCourseDirectory().getCourseList()){
                if(course.getCourseId().equals(sc.getCourseId())){
                    credit = course.getCredit();
                    break;
                }
            }
            student.setAmountOwed(student.getAmountOwed() + (credit*1000));
        }
        
        JOptionPane.showMessageDialog(this, "Added a new course to the schedule");
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        Component component = userProcessContainer.getComponent(userProcessContainer.getComponentCount() - 2);
        if(component instanceof StudentJPanel studentJPanel) {
            studentJPanel.setupStudentDashboard();
        }
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void populateSearch(String search) {
        DefaultTableModel dtm = (DefaultTableModel) tblViewCourse.getModel();
        dtm.setRowCount(0);
        for (CourseSchedule cs : education.getCourseScheduleDirectory().getCourseScheduleList()) {
            if ((cs.getTerm() + " " + cs.getYear()).equals(selectedTerm)) {
                for (Course c : education.getCourseDirectory().getCourseList()) {
                    for (Professor p : education.getProfessorsDirectory().getProfessorList()) {
                        if((p.getProfessorId().equals(cs.getTeachingProfessorId())) && (cs.getCourseId().equals(c.getCourseId())))
                        if(cs.getRegion().equals(search) || cs.getLanguage().equals(search) || p.getName().equals(search) || c.getTopic().equals(search) || cs.getCourseId().equals(search)){
                            Object[] row = new Object[8];
                            row[0] = c.getCourseId();
                            row[1] = c.getTopic();
                            row[2] = c.getName();
                            row[3] = p.getName();
                            row[4] = cs.getStartDate();
                            row[5] = cs.getTeachingProfessorRating();
                            row[6] = cs.getRegion();
                            row[7] = cs.getLanguage();
                            dtm.addRow(row);                            
                        }
                    }
                }
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblWelcomeAdmin;
    private javax.swing.JTable tblViewCourse;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
