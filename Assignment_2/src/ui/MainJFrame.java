/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import model.Person;
import model.PersonDirectory;
import model.User;
import model.UserDirectory;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author chinmaygulhane
 */
public class MainJFrame extends javax.swing.JFrame {

    PersonDirectory personList;
    UserDirectory userList;
    // person and user who logged in    
    Person selectedPerson;
    User selectedUser;
    /**
     * Creates new form NewJFrame
     */
    public MainJFrame() {
        initComponents();
        personList =  new PersonDirectory();
        userList =  new UserDirectory();
        selectedPerson = new Person();
        selectedUser = new User();
        
        loginJPanel.setVisible(true);
        AdminHomeJPanel.setVisible(false);;
        AdminPersonDetailsjPanel.setVisible(false);
        AdminAddUserJPanel.setVisible(false);
        UserProfileJPanel.setVisible(false);
        UserHomeJpanel.setVisible(false);
        BtnLogout.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        splitPane = new javax.swing.JSplitPane();
        headerjPanel = new javax.swing.JPanel();
        BtnLogout = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        workAreajPanel = new javax.swing.JPanel();
        loginJPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        userNameTxtFld = new javax.swing.JTextField();
        passwordTxtFld = new javax.swing.JPasswordField();
        roleBox = new javax.swing.JComboBox<>();
        BtnLogin1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        AdminHomeJPanel = new javax.swing.JPanel();
        btnViewProfile = new javax.swing.JButton();
        btnUpdateProfile = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        AdminPersonDetailsjPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PersonTbl = new javax.swing.JTable();
        btnAdminUpdatePerson = new javax.swing.JButton();
        jLabel73 = new javax.swing.JLabel();
        btnBackAdminPersonDetails = new javax.swing.JButton();
        btnDeletePerson = new javax.swing.JButton();
        btnViewPerson = new javax.swing.JButton();
        genderComboBox1 = new javax.swing.JComboBox<>();
        lblContactNumber1 = new javax.swing.JLabel();
        lblEmailId2 = new javax.swing.JLabel();
        txtPerPhoned = new javax.swing.JTextField();
        txtPerEmail = new javax.swing.JTextField();
        txtPerName = new javax.swing.JTextField();
        lblEmailId3 = new javax.swing.JLabel();
        txtPerAge = new javax.swing.JTextField();
        txtPerSearch = new javax.swing.JTextField();
        lblCountry1 = new javax.swing.JLabel();
        lblName1 = new javax.swing.JLabel();
        txtPerCountry = new javax.swing.JTextField();
        lblAge1 = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        btnAdminSavePerson = new javax.swing.JButton();
        btnAdminSavePerson1 = new javax.swing.JButton();
        lblContactNumber2 = new javax.swing.JLabel();
        txtPerNuId = new javax.swing.JTextField();
        txtPerCity = new javax.swing.JTextField();
        btnSearchPerson = new javax.swing.JButton();
        AdminAddUserJPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        UserTbl = new javax.swing.JTable();
        btnDeleteUser = new javax.swing.JButton();
        jLabel75 = new javax.swing.JLabel();
        lblName5 = new javax.swing.JLabel();
        lblAge5 = new javax.swing.JLabel();
        txtUserPassword = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        lblAge6 = new javax.swing.JLabel();
        jRadioButtonEnabledStatusNo = new javax.swing.JRadioButton();
        jRadioButtonEnabledStatusYes = new javax.swing.JRadioButton();
        btnBackAdminPersonDetails2 = new javax.swing.JButton();
        btnSaveUser = new javax.swing.JButton();
        lblName6 = new javax.swing.JLabel();
        txtUserNuId = new javax.swing.JTextField();
        btnViewUser1 = new javax.swing.JButton();
        btnUpdateUser = new javax.swing.JButton();
        btnCancelUser = new javax.swing.JButton();
        UserProfileJPanel = new javax.swing.JPanel();
        genderComboBox2 = new javax.swing.JComboBox<>();
        txtPerPhonedp = new javax.swing.JTextField();
        lblEmailId4 = new javax.swing.JLabel();
        txtPerCountryp = new javax.swing.JTextField();
        lblName2 = new javax.swing.JLabel();
        lblCountry2 = new javax.swing.JLabel();
        txtPerAgep = new javax.swing.JTextField();
        lblEmailId5 = new javax.swing.JLabel();
        txtPerNamep = new javax.swing.JTextField();
        txtPerEmailp = new javax.swing.JTextField();
        txtPerCityp = new javax.swing.JTextField();
        txtPerNuIdp = new javax.swing.JTextField();
        lblContactNumber3 = new javax.swing.JLabel();
        lblGender1 = new javax.swing.JLabel();
        lblContactNumber4 = new javax.swing.JLabel();
        lblAge2 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        btnSavePersonProfile = new javax.swing.JButton();
        btnCancelPersonProfile = new javax.swing.JButton();
        txtPUserName = new javax.swing.JTextField();
        lblName7 = new javax.swing.JLabel();
        txtPUserPassword = new javax.swing.JTextField();
        lblAge9 = new javax.swing.JLabel();
        btnBackAdminPersonDetails1 = new javax.swing.JButton();
        UserHomeJpanel = new javax.swing.JPanel();
        btnManagePerson1 = new javax.swing.JButton();
        btnAddUser1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        headerjPanel.setBackground(new java.awt.Color(45, 157, 207));

        BtnLogout.setBackground(new java.awt.Color(0, 0, 0));
        BtnLogout.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        BtnLogout.setForeground(new java.awt.Color(255, 255, 255));
        BtnLogout.setText("Logout");
        BtnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogoutActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("User Management System");

        javax.swing.GroupLayout headerjPanelLayout = new javax.swing.GroupLayout(headerjPanel);
        headerjPanel.setLayout(headerjPanelLayout);
        headerjPanelLayout.setHorizontalGroup(
            headerjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerjPanelLayout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(58, 58, 58)
                .addComponent(BtnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        headerjPanelLayout.setVerticalGroup(
            headerjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerjPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(headerjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        splitPane.setTopComponent(headerjPanel);

        loginJPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/homeImage.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(45, 157, 207));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("LOGIN");

        userNameTxtFld.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        userNameTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTxtFldActionPerformed(evt);
            }
        });

        roleBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        roleBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "User" }));
        roleBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleBoxActionPerformed(evt);
            }
        });

        BtnLogin1.setBackground(new java.awt.Color(0, 0, 0));
        BtnLogin1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        BtnLogin1.setForeground(new java.awt.Color(255, 255, 255));
        BtnLogin1.setText("Login");
        BtnLogin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogin1ActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/person_icon.png"))); // NOI18N

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/password_icon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(roleBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordTxtFld)
                    .addComponent(userNameTxtFld)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnLogin1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(passwordTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(roleBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(BtnLogin1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout loginJPanelLayout = new javax.swing.GroupLayout(loginJPanel);
        loginJPanel.setLayout(loginJPanelLayout);
        loginJPanelLayout.setHorizontalGroup(
            loginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginJPanelLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loginJPanelLayout.setVerticalGroup(
            loginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginJPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        AdminHomeJPanel.setBackground(new java.awt.Color(255, 255, 255));

        btnViewProfile.setBackground(new java.awt.Color(0, 0, 0));
        btnViewProfile.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnViewProfile.setForeground(new java.awt.Color(255, 255, 255));
        btnViewProfile.setText("Manage Person");
        btnViewProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProfileActionPerformed(evt);
            }
        });

        btnUpdateProfile.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdateProfile.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnUpdateProfile.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateProfile.setText("Manage User");
        btnUpdateProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProfileActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Welcome To Admin Portal");

        javax.swing.GroupLayout AdminHomeJPanelLayout = new javax.swing.GroupLayout(AdminHomeJPanel);
        AdminHomeJPanel.setLayout(AdminHomeJPanelLayout);
        AdminHomeJPanelLayout.setHorizontalGroup(
            AdminHomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminHomeJPanelLayout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addGroup(AdminHomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdateProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(344, Short.MAX_VALUE))
            .addGroup(AdminHomeJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        AdminHomeJPanelLayout.setVerticalGroup(
            AdminHomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminHomeJPanelLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel6)
                .addGap(90, 90, 90)
                .addComponent(btnViewProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(btnUpdateProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(250, Short.MAX_VALUE))
        );

        AdminPersonDetailsjPanel.setBackground(new java.awt.Color(255, 255, 255));

        PersonTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "NuID", "Age", "Contact No", "Gender", "Email", "City", "Country"
            }
        ));
        jScrollPane4.setViewportView(PersonTbl);

        btnAdminUpdatePerson.setBackground(new java.awt.Color(0, 0, 0));
        btnAdminUpdatePerson.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnAdminUpdatePerson.setForeground(new java.awt.Color(255, 255, 255));
        btnAdminUpdatePerson.setText("Update");
        btnAdminUpdatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminUpdatePersonActionPerformed(evt);
            }
        });

        jLabel73.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel73.setText("Manage Person");

        btnBackAdminPersonDetails.setBackground(new java.awt.Color(0, 0, 0));
        btnBackAdminPersonDetails.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnBackAdminPersonDetails.setForeground(new java.awt.Color(255, 255, 255));
        btnBackAdminPersonDetails.setText("Back");
        btnBackAdminPersonDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackAdminPersonDetailsActionPerformed(evt);
            }
        });

        btnDeletePerson.setBackground(new java.awt.Color(0, 0, 0));
        btnDeletePerson.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnDeletePerson.setForeground(new java.awt.Color(255, 255, 255));
        btnDeletePerson.setText("Delete");
        btnDeletePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePersonActionPerformed(evt);
            }
        });

        btnViewPerson.setBackground(new java.awt.Color(0, 0, 0));
        btnViewPerson.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnViewPerson.setForeground(new java.awt.Color(255, 255, 255));
        btnViewPerson.setText("View");
        btnViewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPersonActionPerformed(evt);
            }
        });

        genderComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        genderComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderComboBox1ActionPerformed(evt);
            }
        });

        lblContactNumber1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblContactNumber1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblContactNumber1.setText("Contact Number:");

        lblEmailId2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblEmailId2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmailId2.setText("Email Id:");

        lblEmailId3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblEmailId3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmailId3.setText("City:");

        txtPerAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerAgeActionPerformed(evt);
            }
        });

        lblCountry1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblCountry1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCountry1.setText("Country:");

        lblName1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblName1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblName1.setText("Name:");

        lblAge1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblAge1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge1.setText("Age:");

        lblGender.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblGender.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGender.setText("Gender:");

        btnAdminSavePerson.setBackground(new java.awt.Color(0, 0, 0));
        btnAdminSavePerson.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnAdminSavePerson.setForeground(new java.awt.Color(255, 255, 255));
        btnAdminSavePerson.setText("Save");
        btnAdminSavePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminSavePersonActionPerformed(evt);
            }
        });

        btnAdminSavePerson1.setBackground(new java.awt.Color(0, 0, 0));
        btnAdminSavePerson1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnAdminSavePerson1.setForeground(new java.awt.Color(255, 255, 255));
        btnAdminSavePerson1.setText("Cancel");
        btnAdminSavePerson1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminSavePerson1ActionPerformed(evt);
            }
        });

        lblContactNumber2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblContactNumber2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblContactNumber2.setText("NuId:");

        btnSearchPerson.setBackground(new java.awt.Color(0, 0, 0));
        btnSearchPerson.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnSearchPerson.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchPerson.setText("Search");
        btnSearchPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AdminPersonDetailsjPanelLayout = new javax.swing.GroupLayout(AdminPersonDetailsjPanel);
        AdminPersonDetailsjPanel.setLayout(AdminPersonDetailsjPanelLayout);
        AdminPersonDetailsjPanelLayout.setHorizontalGroup(
            AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminPersonDetailsjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminPersonDetailsjPanelLayout.createSequentialGroup()
                        .addComponent(btnBackAdminPersonDetails)
                        .addGap(265, 265, 265)
                        .addComponent(jLabel73)
                        .addContainerGap(397, Short.MAX_VALUE))
                    .addGroup(AdminPersonDetailsjPanelLayout.createSequentialGroup()
                        .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblName1)
                            .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 824, Short.MAX_VALUE))))
            .addGroup(AdminPersonDetailsjPanelLayout.createSequentialGroup()
                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminPersonDetailsjPanelLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jScrollPane4))
                    .addGroup(AdminPersonDetailsjPanelLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPerName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPerAge, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genderComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AdminPersonDetailsjPanelLayout.createSequentialGroup()
                                .addComponent(btnViewPerson)
                                .addGap(44, 44, 44)
                                .addComponent(btnDeletePerson)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPerSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearchPerson))
                            .addGroup(AdminPersonDetailsjPanelLayout.createSequentialGroup()
                                .addComponent(btnAdminSavePerson)
                                .addGap(44, 44, 44)
                                .addComponent(btnAdminUpdatePerson)
                                .addGap(44, 44, 44)
                                .addComponent(btnAdminSavePerson1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(AdminPersonDetailsjPanelLayout.createSequentialGroup()
                                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblContactNumber2)
                                    .addComponent(lblContactNumber1)
                                    .addComponent(lblEmailId2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPerEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(txtPerNuId, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(txtPerPhoned))
                                .addGap(50, 50, 50)
                                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCountry1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmailId3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPerCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPerCity, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(26, 26, 26))
        );
        AdminPersonDetailsjPanelLayout.setVerticalGroup(
            AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminPersonDetailsjPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel73, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBackAdminPersonDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewPerson)
                    .addComponent(btnDeletePerson)
                    .addComponent(txtPerSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchPerson))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName1)
                    .addComponent(txtPerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblContactNumber2)
                    .addComponent(txtPerNuId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContactNumber1)
                    .addComponent(txtPerAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge1)
                    .addComponent(txtPerPhoned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailId3)
                    .addComponent(txtPerCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailId2)
                    .addComponent(genderComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGender)
                    .addComponent(txtPerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCountry1)
                    .addComponent(txtPerCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(AdminPersonDetailsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdminUpdatePerson)
                    .addComponent(btnAdminSavePerson)
                    .addComponent(btnAdminSavePerson1))
                .addGap(31, 31, 31))
        );

        AdminAddUserJPanel.setBackground(new java.awt.Color(255, 255, 255));
        AdminAddUserJPanel.setPreferredSize(new java.awt.Dimension(918, 600));

        UserTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NuID", "User Name", "Password", "Active"
            }
        ));
        jScrollPane7.setViewportView(UserTbl);

        btnDeleteUser.setBackground(new java.awt.Color(0, 0, 0));
        btnDeleteUser.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnDeleteUser.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteUser.setText("Delete");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        jLabel75.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel75.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel75.setText("Users List");

        lblName5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblName5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblName5.setText("User Name:");

        lblAge5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblAge5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge5.setText("Password:");

        txtUserPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserPasswordActionPerformed(evt);
            }
        });

        lblAge6.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblAge6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge6.setText("Active:");

        buttonGroup1.add(jRadioButtonEnabledStatusNo);
        jRadioButtonEnabledStatusNo.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jRadioButtonEnabledStatusNo.setText("No");
        jRadioButtonEnabledStatusNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEnabledStatusNoActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonEnabledStatusYes);
        jRadioButtonEnabledStatusYes.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jRadioButtonEnabledStatusYes.setText("Yes");
        jRadioButtonEnabledStatusYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEnabledStatusYesActionPerformed(evt);
            }
        });

        btnBackAdminPersonDetails2.setBackground(new java.awt.Color(0, 0, 0));
        btnBackAdminPersonDetails2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnBackAdminPersonDetails2.setForeground(new java.awt.Color(255, 255, 255));
        btnBackAdminPersonDetails2.setText("Back");
        btnBackAdminPersonDetails2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackAdminPersonDetails2ActionPerformed(evt);
            }
        });

        btnSaveUser.setBackground(new java.awt.Color(0, 0, 0));
        btnSaveUser.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnSaveUser.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveUser.setText("Save");
        btnSaveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveUserActionPerformed(evt);
            }
        });

        lblName6.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblName6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblName6.setText("NUID:");

        btnViewUser1.setBackground(new java.awt.Color(0, 0, 0));
        btnViewUser1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnViewUser1.setForeground(new java.awt.Color(255, 255, 255));
        btnViewUser1.setText("View User");
        btnViewUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUser1ActionPerformed(evt);
            }
        });

        btnUpdateUser.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdateUser.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnUpdateUser.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateUser.setText("Update");
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });

        btnCancelUser.setBackground(new java.awt.Color(0, 0, 0));
        btnCancelUser.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnCancelUser.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelUser.setText("Cancel");
        btnCancelUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AdminAddUserJPanelLayout = new javax.swing.GroupLayout(AdminAddUserJPanel);
        AdminAddUserJPanel.setLayout(AdminAddUserJPanelLayout);
        AdminAddUserJPanelLayout.setHorizontalGroup(
            AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminAddUserJPanelLayout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName5)
                    .addComponent(lblAge5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName6))
                .addGap(23, 23, 23)
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(AdminAddUserJPanelLayout.createSequentialGroup()
                            .addComponent(jRadioButtonEnabledStatusYes)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButtonEnabledStatusNo))
                        .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtUserNuId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminAddUserJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminAddUserJPanelLayout.createSequentialGroup()
                        .addComponent(btnBackAdminPersonDetails2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminAddUserJPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminAddUserJPanelLayout.createSequentialGroup()
                                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(AdminAddUserJPanelLayout.createSequentialGroup()
                                        .addComponent(btnViewUser1)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDeleteUser))
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminAddUserJPanelLayout.createSequentialGroup()
                                .addComponent(btnSaveUser)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdateUser)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelUser)
                                .addGap(312, 312, 312))))))
        );
        AdminAddUserJPanelLayout.setVerticalGroup(
            AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminAddUserJPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel75)
                    .addComponent(btnBackAdminPersonDetails2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteUser)
                    .addComponent(btnViewUser1))
                .addGap(18, 39, Short.MAX_VALUE)
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName6)
                    .addComponent(txtUserNuId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName5))
                .addGap(18, 18, 18)
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge5)
                    .addComponent(txtUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge6)
                    .addComponent(jRadioButtonEnabledStatusYes)
                    .addComponent(jRadioButtonEnabledStatusNo))
                .addGap(18, 18, 18)
                .addGroup(AdminAddUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveUser)
                    .addComponent(btnUpdateUser)
                    .addComponent(btnCancelUser))
                .addGap(104, 104, 104))
        );

        UserProfileJPanel.setBackground(new java.awt.Color(255, 255, 255));
        UserProfileJPanel.setPreferredSize(new java.awt.Dimension(918, 600));

        genderComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        genderComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderComboBox2ActionPerformed(evt);
            }
        });

        txtPerPhonedp.setEditable(false);

        lblEmailId4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblEmailId4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmailId4.setText("Email Id:");

        txtPerCountryp.setEditable(false);

        lblName2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblName2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblName2.setText("Name:");

        lblCountry2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblCountry2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCountry2.setText("Country:");

        txtPerAgep.setEditable(false);
        txtPerAgep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerAgepActionPerformed(evt);
            }
        });

        lblEmailId5.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblEmailId5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmailId5.setText("City:");

        txtPerNamep.setEditable(false);

        txtPerEmailp.setEditable(false);

        txtPerCityp.setEditable(false);

        txtPerNuIdp.setEditable(false);

        lblContactNumber3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblContactNumber3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblContactNumber3.setText("NuId:");

        lblGender1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblGender1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGender1.setText("Gender:");

        lblContactNumber4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblContactNumber4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblContactNumber4.setText("Contact Number:");

        lblAge2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblAge2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge2.setText("Age:");

        jLabel76.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel76.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel76.setText("User Profile");

        btnSavePersonProfile.setBackground(new java.awt.Color(0, 0, 0));
        btnSavePersonProfile.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnSavePersonProfile.setForeground(new java.awt.Color(255, 255, 255));
        btnSavePersonProfile.setText("Save");
        btnSavePersonProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePersonProfileActionPerformed(evt);
            }
        });

        btnCancelPersonProfile.setBackground(new java.awt.Color(0, 0, 0));
        btnCancelPersonProfile.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnCancelPersonProfile.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelPersonProfile.setText("Cancel");
        btnCancelPersonProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelPersonProfileActionPerformed(evt);
            }
        });

        txtPUserName.setEditable(false);

        lblName7.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblName7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblName7.setText("User Name:");

        txtPUserPassword.setEditable(false);
        txtPUserPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPUserPasswordActionPerformed(evt);
            }
        });

        lblAge9.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblAge9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge9.setText("Password:");

        btnBackAdminPersonDetails1.setBackground(new java.awt.Color(0, 0, 0));
        btnBackAdminPersonDetails1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnBackAdminPersonDetails1.setForeground(new java.awt.Color(255, 255, 255));
        btnBackAdminPersonDetails1.setText("Back");
        btnBackAdminPersonDetails1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackAdminPersonDetails1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserProfileJPanelLayout = new javax.swing.GroupLayout(UserProfileJPanel);
        UserProfileJPanel.setLayout(UserProfileJPanelLayout);
        UserProfileJPanelLayout.setHorizontalGroup(
            UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserProfileJPanelLayout.createSequentialGroup()
                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(UserProfileJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBackAdminPersonDetails1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 256, Short.MAX_VALUE)
                        .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(348, 348, 348))
                    .addGroup(UserProfileJPanelLayout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(UserProfileJPanelLayout.createSequentialGroup()
                                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(lblAge2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPerAgep, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserProfileJPanelLayout.createSequentialGroup()
                                        .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblGender1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblName2)
                                            .addComponent(lblName7)
                                            .addComponent(lblAge9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPerNamep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(genderComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(50, 50, 50)
                                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblContactNumber3)
                                    .addComponent(lblContactNumber4)
                                    .addComponent(lblEmailId4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmailId5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCountry2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(UserProfileJPanelLayout.createSequentialGroup()
                                .addComponent(btnSavePersonProfile)
                                .addGap(44, 44, 44)
                                .addComponent(btnCancelPersonProfile)))
                        .addGap(18, 18, 18)
                        .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPerEmailp)
                                .addComponent(txtPerPhonedp)
                                .addComponent(txtPerNuIdp, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPerCityp, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPerCountryp, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UserProfileJPanelLayout.setVerticalGroup(
            UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserProfileJPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel76)
                    .addComponent(btnBackAdminPersonDetails1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContactNumber3)
                    .addComponent(txtPerNuIdp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPerNamep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName2))
                .addGap(18, 18, 18)
                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContactNumber4)
                    .addComponent(txtPerPhonedp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge2)
                    .addComponent(txtPerAgep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailId4)
                    .addComponent(txtPerEmailp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genderComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGender1))
                .addGap(18, 18, 18)
                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmailId5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPerCityp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblName7)
                        .addComponent(txtPUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPerCountryp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCountry2)
                    .addComponent(lblAge9)
                    .addComponent(txtPUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(UserProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelPersonProfile)
                    .addComponent(btnSavePersonProfile))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        UserHomeJpanel.setBackground(new java.awt.Color(255, 255, 255));

        btnManagePerson1.setBackground(new java.awt.Color(0, 0, 0));
        btnManagePerson1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnManagePerson1.setForeground(new java.awt.Color(255, 255, 255));
        btnManagePerson1.setText("View Personal Information");
        btnManagePerson1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManagePerson1ActionPerformed(evt);
            }
        });

        btnAddUser1.setBackground(new java.awt.Color(0, 0, 0));
        btnAddUser1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnAddUser1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddUser1.setText("Update Personal Information");
        btnAddUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUser1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Welcome To User Profile");

        javax.swing.GroupLayout UserHomeJpanelLayout = new javax.swing.GroupLayout(UserHomeJpanel);
        UserHomeJpanel.setLayout(UserHomeJpanelLayout);
        UserHomeJpanelLayout.setHorizontalGroup(
            UserHomeJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserHomeJpanelLayout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addGroup(UserHomeJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddUser1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                    .addComponent(btnManagePerson1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(301, Short.MAX_VALUE))
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        UserHomeJpanelLayout.setVerticalGroup(
            UserHomeJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserHomeJpanelLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel7)
                .addGap(90, 90, 90)
                .addComponent(btnManagePerson1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(btnAddUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(246, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout workAreajPanelLayout = new javax.swing.GroupLayout(workAreajPanel);
        workAreajPanel.setLayout(workAreajPanelLayout);
        workAreajPanelLayout.setHorizontalGroup(
            workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginJPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(workAreajPanelLayout.createSequentialGroup()
                    .addGap(0, 24, Short.MAX_VALUE)
                    .addComponent(AdminHomeJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 25, Short.MAX_VALUE)))
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(workAreajPanelLayout.createSequentialGroup()
                    .addGap(0, 19, Short.MAX_VALUE)
                    .addComponent(AdminPersonDetailsjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 19, Short.MAX_VALUE)))
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(workAreajPanelLayout.createSequentialGroup()
                    .addGap(0, 24, Short.MAX_VALUE)
                    .addComponent(AdminAddUserJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 25, Short.MAX_VALUE)))
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(workAreajPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(UserProfileJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workAreajPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UserHomeJpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(8, 8, 8)))
        );
        workAreajPanelLayout.setVerticalGroup(
            workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginJPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(workAreajPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(AdminHomeJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(workAreajPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(AdminPersonDetailsjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(workAreajPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(AdminAddUserJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(workAreajPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(UserProfileJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(workAreajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(workAreajPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(UserHomeJpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        splitPane.setRightComponent(workAreajPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogoutActionPerformed
        // TODO add your handling code here:
        loginJPanel.setVisible(true);
        splitPane.setRightComponent(loginJPanel);
        selectedPerson = new Person();
        selectedUser = new User();
        BtnLogout.setVisible(false);
    }//GEN-LAST:event_BtnLogoutActionPerformed

    private void userNameTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameTxtFldActionPerformed

    private void roleBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleBoxActionPerformed

    private void BtnLogin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogin1ActionPerformed
        // TODO add your handling code here:
        String userName = userNameTxtFld.getText();
        String pass = passwordTxtFld.getText();
        String role = String.valueOf(roleBox.getSelectedItem());
        
        if(role.equals("Admin") && userName.equals("Admin") && pass.equals("Admin")){
            loginJPanel.setVisible(false);
            AdminHomeJPanel.setVisible(true);
            splitPane.setRightComponent(AdminHomeJPanel);
            BtnLogout.setVisible(true);
        } else if(role.equals("User")) {
            User user = userList.searchUserByUserName(userName);
            if(user != null && BCrypt.checkpw(pass, user.getPassword()) && user.getEnabledStaus().equals("Yes")){
//              JOptionPane.showMessageDialog(null, "User Login Successfull"); 
                UserHomeJpanel.setVisible(true);
                splitPane.setRightComponent(UserHomeJpanel);
                Person person = personList.searchPersonByNuId(user.getNUID());
                setUpUserProfile(person, user);
                selectedPerson = person;
                selectedUser = user;
                BtnLogout.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Invalid Login Credentials");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid Login Credentials");
        }
    }//GEN-LAST:event_BtnLogin1ActionPerformed

    private void setUpUserProfile(Person person, User user){
        txtPerNamep.setText(person.getName());
        txtPerAgep.setText(person.getAge());
        txtPerEmailp.setText(person.getEmailId());
        txtPerCountryp.setText(person.getCountry());
        txtPerPhonedp.setText(String.valueOf(person.getContactNumber()));
        genderComboBox2.setSelectedItem(person.getGender());
        txtPerCityp.setText(person.getCity());
        txtPerNuIdp.setText(person.getNUID());
        txtPUserName.setText(user.getUserName());
        txtPUserPassword.setText(user.getPassword());
        txtPUserPassword.setText(user.getPassword());
    }
    
    private void btnViewProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProfileActionPerformed
        // TODO add your handling code here:
        AdminPersonDetailsjPanel.setVisible(true);
        splitPane.setRightComponent(AdminPersonDetailsjPanel);
        AdminHomeJPanel.setVisible(false);
        btnAdminUpdatePerson.setEnabled(false);
        populatePersondirectory();
    }//GEN-LAST:event_btnViewProfileActionPerformed

    private void btnUpdateProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProfileActionPerformed
        // TODO add your handling code here:
        AdminAddUserJPanel.setVisible(true);
        splitPane.setRightComponent(AdminAddUserJPanel);
        AdminHomeJPanel.setVisible(false);
        populateUserTable();
        btnUpdateUser.setEnabled(false);
    }//GEN-LAST:event_btnUpdateProfileActionPerformed

    private void btnAdminUpdatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminUpdatePersonActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = PersonTbl.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;

        }

        // Validation if any field is left empty
        if(txtPerName.getText().isEmpty() || txtPerAge.getText().isEmpty() || txtPerEmail.getText().isEmpty() || txtPerCountry.getText().isEmpty()
            || txtPerPhoned.getText().isEmpty() || txtPerCity.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter all the fields");
            return;
        }

        // Phone no validations
        boolean checkIfNumber;
        String phoneNo = txtPerPhoned.getText();
        checkIfNumber = phoneNo.matches("^[0-9]+$");
        if(!checkIfNumber) {
            JOptionPane.showMessageDialog(null, "Contact Number must have digits only");
            return;
        }
        if(txtPerPhoned.getText().length() != 10)
        {
            JOptionPane.showMessageDialog(null, "Contact Number must be of 10 digits");
            return;
        }
        boolean checkEmailflag;
        checkEmailflag = txtPerEmail.getText().matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");

        if(!checkEmailflag) {
            JOptionPane.showMessageDialog(null, "Email Address must be in format of X@Y.Z");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        Person person = (Person)model.getValueAt(selectedRowIndex, 0);

        String name = txtPerName.getText();
        String age = txtPerAge.getText();
        String email = txtPerEmail.getText();
        String country = txtPerCountry.getText();
        long contactNo = Long.parseLong(txtPerPhoned.getText());
        String gender = (String) genderComboBox1.getSelectedItem();
        String city = txtPerCity.getText();

        person.setName(name);
        person.setAge(age);
        person.setGender(gender);
        person.setContactNumber(contactNo);
        person.setEmailId(email);
        person.setCountry(country);
        person.setCity(city);
        populatePersondirectory();
        JOptionPane.showMessageDialog(this, "Person Information Updated");
        clearPersonDetails();
    }//GEN-LAST:event_btnAdminUpdatePersonActionPerformed

    private void btnBackAdminPersonDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackAdminPersonDetailsActionPerformed
        // TODO add your handling code here:
        AdminPersonDetailsjPanel.setVisible(false);
        AdminHomeJPanel.setVisible(true);
        splitPane.setRightComponent(AdminHomeJPanel);
        clearPersonDetails();
    }//GEN-LAST:event_btnBackAdminPersonDetailsActionPerformed

    private void btnDeletePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePersonActionPerformed

        // TODO add your handling code here:
        btnAdminUpdatePerson.setVisible(true);
        int selectedRowIndex = PersonTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        Person selectedPersonDetails = (Person) model.getValueAt(selectedRowIndex, 0);
        personList.deletePerson(selectedPersonDetails);
        populatePersondirectory();
        clearPersonDetails();
        JOptionPane.showMessageDialog(this, "Person deleted successfully");
    }//GEN-LAST:event_btnDeletePersonActionPerformed

    private void btnViewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPersonActionPerformed
        btnAdminUpdatePerson.setEnabled(true);
        txtPerNuId.setEditable(false);
        int selectedRowIndex = PersonTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        Person selectedPersonDetails = (Person) model.getValueAt(selectedRowIndex, 0);

        txtPerName.setText(selectedPersonDetails.getName());
        txtPerAge.setText(selectedPersonDetails.getAge());
        txtPerEmail.setText(selectedPersonDetails.getEmailId());
        txtPerCountry.setText(selectedPersonDetails.getCountry());
        txtPerPhoned.setText(String.valueOf(selectedPersonDetails.getContactNumber()));
        genderComboBox1.setSelectedItem(selectedPersonDetails.getGender());
        txtPerCity.setText(selectedPersonDetails.getCity());
        txtPerCountry.setText(selectedPersonDetails.getCountry());
        txtPerNuId.setText(selectedPersonDetails.getNUID());

        btnAdminSavePerson.setEnabled(false);
        btnAdminUpdatePerson.setEnabled(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewPersonActionPerformed

    private void genderComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderComboBox1ActionPerformed

    private void txtPerAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerAgeActionPerformed

    private void btnAdminSavePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminSavePersonActionPerformed
        // TODO add your handling code here:
        // Validation if any field is left empty
        if(txtPerName.getText().isEmpty() || txtPerAge.getText().isEmpty() || txtPerEmail.getText().isEmpty() || txtPerCountry.getText().isEmpty()
            || txtPerPhoned.getText().isEmpty() || txtPerCity.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter all the fields");
            return;
        }

        // Phone no validations
        boolean checkIfNumber;
        String phoneNo = txtPerPhoned.getText();
        checkIfNumber = phoneNo.matches("^[0-9]+$");
        if(!checkIfNumber) {
            JOptionPane.showMessageDialog(null, "Contact Number must have digits only");
            return;
        }
        if(txtPerPhoned.getText().length() != 10)
        {
            JOptionPane.showMessageDialog(null, "Contact Number must be of 10 digits");
            return;
        }
        boolean checkEmailflag;
        checkEmailflag = txtPerEmail.getText().matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");

        if(!checkEmailflag) {
            JOptionPane.showMessageDialog(null, "Email Address must be in format of X@Y.Z");
            return;
        }

        String name = txtPerName.getText();
        String age = txtPerAge.getText();
        String email = txtPerEmail.getText();
        String country = txtPerCountry.getText();
        long contactNo = Long.parseLong(txtPerPhoned.getText());
        String gender = (String) genderComboBox1.getSelectedItem();
        String city = txtPerCity.getText();
        String nuId = txtPerNuId.getText();

        // check if nuid is unique  
        Person p = personList.searchPersonByNuId(nuId);
        if(p!=null){
            JOptionPane.showMessageDialog(null, "Person with entered NUID already exists. Please enter a new Id.");
            return;
        }
        
        Person person =  personList.addNewPerson();
        person.setName(name);
        person.setAge(age); 
        person.setGender(gender);
        person.setContactNumber(contactNo);
        person.setEmailId(email);
        person.setCountry(country);
        person.setCity(city);
        person.setNUID(nuId);
        person.setIsAUser(false);

        populatePersondirectory();
        clearPersonDetails();
        System.out.println(personList.getPersons());

        JOptionPane.showMessageDialog(this, "Person Information Saved");
    }//GEN-LAST:event_btnAdminSavePersonActionPerformed

    private void btnAdminSavePerson1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminSavePerson1ActionPerformed
        // TODO add your handling code here:
        clearPersonDetails();
        txtPerNuId.setEditable(true);
    }//GEN-LAST:event_btnAdminSavePerson1ActionPerformed

    private void btnSearchPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPersonActionPerformed
        // TODO add your handling code here:
        String neuId = txtPerSearch.getText();

        if(neuId.length() > 0){
            Person p = personList.searchPersonByNuId(neuId);
            System.out.println(p);
            if(p != null){
                DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
                model.setRowCount(0);
                Object[] row = new Object[9];
                row[0]= p;
                row[1] = p.getName();
                row[2] = p.getNUID();
                row[3] = p.getAge();
                row[4] = p.getContactNumber();
                row[5] = p.getGender();
                row[6] = p.getEmailId();
                row[7]= p.getCity();
                row[8] = p.getCountry();
                model.addRow(row);
            } else {
                JOptionPane.showMessageDialog(this, "Person Not Found");
            }
        } else {
            populatePersondirectory();
        }
    }//GEN-LAST:event_btnSearchPersonActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void txtUserPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserPasswordActionPerformed

    private void jRadioButtonEnabledStatusNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEnabledStatusNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonEnabledStatusNoActionPerformed

    private void jRadioButtonEnabledStatusYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEnabledStatusYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonEnabledStatusYesActionPerformed

    private void btnBackAdminPersonDetails2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackAdminPersonDetails2ActionPerformed
        // TODO add your handling code here:
        AdminAddUserJPanel.setVisible(false);
        AdminHomeJPanel.setVisible(true);
        splitPane.setRightComponent(AdminHomeJPanel);
    }//GEN-LAST:event_btnBackAdminPersonDetails2ActionPerformed

    private void btnSaveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveUserActionPerformed
        // TODO add your handling code here:
        // Validation if any field is left empty
        if(txtUserNuId.getText().isEmpty() || txtUserPassword.getText().isEmpty() || txtUserName.getText().isEmpty()|| !(jRadioButtonEnabledStatusNo.isSelected() || jRadioButtonEnabledStatusYes.isSelected())){
            JOptionPane.showMessageDialog(null, "Please enter all the fields");
            return;
        }
        String nuId = txtUserNuId.getText();
        // check if NuId person exist 
        Person person = personList.searchPersonByNuId(nuId);
        if(person == null){
            System.out.println("Person" + person);
            JOptionPane.showMessageDialog(null, "Please enter a valid NUID");
            return;            
        }
        // check if user already exists
        User userAlreadyExist = userList.searchUserByNuId(nuId);
        if(userAlreadyExist != null){
            JOptionPane.showMessageDialog(null, "User with entered NUID already exists"); 
            return;
        }
        
        String userName = txtUserName.getText();
        String password = txtUserPassword.getText();
        
        
        String isActive = "No";
        if(jRadioButtonEnabledStatusYes.isSelected()){
            isActive = "Yes";
        }

        User user =  userList.addNewUser();
        user.setUserName(userName);
        user.setPassword(password);
        user.setEnabledStaus(isActive);
        user.setNUID(nuId);
        user.setRole("User");
        user.setIsAUser(true);

        populateUserTable();
        clearUserDetails();
        System.out.println(userList.getUsers());

        JOptionPane.showMessageDialog(this, "User Information Saved");
    }//GEN-LAST:event_btnSaveUserActionPerformed

    private void btnViewUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUser1ActionPerformed
        // TODO add your handling code here:
        btnUpdateUser.setEnabled(true);
        btnSaveUser.setEnabled(false); 
        txtUserNuId.setEnabled(false);
        
        int selectedRowIndex = UserTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) UserTbl.getModel();
        User selectedUserDetails = (User) model.getValueAt(selectedRowIndex, 0);

        txtUserNuId.setText(selectedUserDetails.getNUID());
        txtUserName.setText(selectedUserDetails.getUserName());
        txtUserPassword.setText(selectedUserDetails.getPassword());
        if(selectedUserDetails.getEnabledStaus() == "Yes"){
          jRadioButtonEnabledStatusYes.setSelected(true);
        } else {
          jRadioButtonEnabledStatusNo.setSelected(true);
        }
    }//GEN-LAST:event_btnViewUser1ActionPerformed

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = UserTbl.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
        }

        // Validation if any field is left empty
        if(txtUserNuId.getText().isEmpty() || txtUserPassword.getText().isEmpty() || txtUserName.getText().isEmpty()|| !(jRadioButtonEnabledStatusNo.isSelected() || jRadioButtonEnabledStatusYes.isSelected())){
            JOptionPane.showMessageDialog(null, "Please enter all the fields");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) UserTbl.getModel();
        User user = (User)model.getValueAt(selectedRowIndex, 0);
        
        String nuId = txtUserNuId.getText();
        String userName = txtUserName.getText();
        String password = txtUserPassword.getText();
        String isActive = "No";
        if(jRadioButtonEnabledStatusYes.isSelected()){
            isActive = "Yes";
        }
        boolean isPassWordValid = user.isPasswordValid(password);
        if(!isPassWordValid){
             JOptionPane.showMessageDialog(null, "New password cannot be a previously used password. Please try again"); 
             return;
        }
        user.setUserName(userName);
        user.setPassword(password);
        user.setEnabledStaus(isActive);
        user.setNUID(nuId);

        populateUserTable();
        clearUserDetails();
        JOptionPane.showMessageDialog(this, "User Information Updated");
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    private void btnCancelUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelUserActionPerformed
        // TODO add your handling code here:
        clearUserDetails();
    }//GEN-LAST:event_btnCancelUserActionPerformed

    private void genderComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderComboBox2ActionPerformed

    private void txtPerAgepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerAgepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerAgepActionPerformed

    private void btnSavePersonProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePersonProfileActionPerformed
        // TODO add your handling code here:
        
        // Validation if any field is left empty
        if(txtPerNamep.getText().isEmpty() || txtPerAgep.getText().isEmpty() || txtPerEmailp.getText().isEmpty() || txtPerCountryp.getText().isEmpty()
            || txtPerPhonedp.getText().isEmpty() || txtPUserName.getText().isEmpty() || txtPUserPassword.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter all the fields");
            return;
        }

        // Phone no validations
        boolean checkIfNumber;
        String phoneNo = txtPerPhonedp.getText();
        checkIfNumber = phoneNo.matches("^[0-9]+$");
        if(!checkIfNumber) {
            JOptionPane.showMessageDialog(null, "Contact Number must have digits only");
            return;
        }
        if(txtPerPhonedp.getText().length() != 10)
        {
            JOptionPane.showMessageDialog(null, "Contact Number must be of 10 digits");
            return;
        }
        boolean checkEmailflag;
        checkEmailflag = txtPerEmailp.getText().matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");

        if(!checkEmailflag) {
            JOptionPane.showMessageDialog(null, "Email Address must be in format of X@Y.Z");
            return;
        }
        
        String name = txtPerNamep.getText();
        String age = txtPerAgep.getText();
        String email = txtPerEmailp.getText();
        String country = txtPerCountryp.getText();
        String city = txtPerCityp.getText();
        long contactNo = Long.parseLong(txtPerPhonedp.getText());
        String gender = (String) genderComboBox2.getSelectedItem();
        
        String userName = txtPUserName.getText();
        String password = txtPUserPassword.getText();

        boolean isPassWordValid = selectedUser.isPasswordValid(password);
        if(!isPassWordValid){
             JOptionPane.showMessageDialog(null, "New password cannot be a previously used password. Please try again"); 
             return;
        }
                
        selectedPerson.setName(name);
        selectedPerson.setAge(age);
        selectedPerson.setGender(gender);
        selectedPerson.setContactNumber(contactNo);
        selectedPerson.setEmailId(email);
        selectedPerson.setCountry(country);
        selectedPerson.setCity(city);
        
        selectedUser.setUserName(userName);
        selectedUser.setPassword(password);
        
        JOptionPane.showMessageDialog(this, "Person Information Updated");
    }//GEN-LAST:event_btnSavePersonProfileActionPerformed

    private void resetProfileScreen(){
        txtPerNamep.setEditable(false);
        txtPerAgep.setEditable(false);
        txtPerEmailp.setEditable(false);
        genderComboBox2.setSelectedItem(false);
        txtPerCountryp.setEditable(false);
        txtPerCityp.setEditable(false);
        txtPerPhonedp.setEditable(false);
        
        txtPUserPassword.setEditable(false);
        txtPUserName.setEditable(false);
    }
    private void btnCancelPersonProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelPersonProfileActionPerformed
        // TODO add your handling code here:
        setUpUserProfile(selectedPerson, selectedUser);
    }//GEN-LAST:event_btnCancelPersonProfileActionPerformed

    private void btnManagePerson1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManagePerson1ActionPerformed
        // TODO add your handling code here:
        UserProfileJPanel.setVisible(true);
        splitPane.setRightComponent(UserProfileJPanel);
        btnSavePersonProfile.setVisible(false);
        btnCancelPersonProfile.setVisible(false);
        genderComboBox2.setEnabled(false);
    }//GEN-LAST:event_btnManagePerson1ActionPerformed

    private void btnAddUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUser1ActionPerformed
        // TODO add your handling code here:
        UserProfileJPanel.setVisible(true);
        splitPane.setRightComponent(UserProfileJPanel);
        txtPerNamep.setEditable(true);
        txtPerAgep.setEditable(true);
        txtPerEmailp.setEditable(true);
        genderComboBox2.setEnabled(true);
        txtPerCountryp.setEditable(true);
        txtPerCityp.setEditable(true);
        txtPerPhonedp.setEditable(true);
        
        txtPUserPassword.setEditable(true);
        txtPUserName.setEditable(true);
        
        btnSavePersonProfile.setVisible(true);
        btnCancelPersonProfile.setVisible(true);
    }//GEN-LAST:event_btnAddUser1ActionPerformed

    private void txtPUserPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPUserPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPUserPasswordActionPerformed

    private void btnBackAdminPersonDetails1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackAdminPersonDetails1ActionPerformed
        // TODO add your handling code here:
        UserProfileJPanel.setVisible(false);
        UserHomeJpanel.setVisible(true);
        splitPane.setRightComponent(UserHomeJpanel);
    }//GEN-LAST:event_btnBackAdminPersonDetails1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    
    private void clearPersonDetails(){
        txtPerName.setText("");
        txtPerAge.setText(" ");
        txtPerEmail.setText("");
        txtPerCountry.setText("");
        txtPerPhoned.setText("");
        genderComboBox1.setSelectedItem("Male");
        txtPerSearch.setText("");
        txtPerCountry.setText("");
        txtPerNuId.setText("");
        txtPerCity.setText("");
        btnAdminSavePerson.setEnabled(true);
        btnAdminUpdatePerson.setEnabled(false);
    }
    
    public void clearUserDetails(){
        txtUserNuId.setText("");
        txtUserName.setText("");
        txtUserPassword.setText("");
        buttonGroup1.clearSelection();
        jRadioButtonEnabledStatusYes.setSelected(false);
        jRadioButtonEnabledStatusNo.setSelected(false);
        btnSaveUser.setEnabled(true);
        btnUpdateUser.setEnabled(false);
        txtUserNuId.setEnabled(true);
    }
    
    private void populatePersondirectory() {
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        JTableHeader header = PersonTbl.getTableHeader();
        header.setFont(new Font("Dialog", Font.BOLD, 14));
        model.setRowCount(0);
        
        for ( Person ed : personList.getPersons()){
            Object[] row = new Object[9];
            row[0]= ed;
            row[1] = ed.getNUID();
            row[2] = ed.getAge();
            row[3] = ed.getContactNumber();
            row[4] = ed.getGender();
            row[5] = ed.getEmailId();
            row[6] = ed.getCity();
            row[7] = ed.getCountry();
            model.addRow(row);
        }
    }
    
    private void populateUserTable() {
        DefaultTableModel model = (DefaultTableModel) UserTbl.getModel();
        JTableHeader header = UserTbl.getTableHeader();
        header.setFont(new Font("Dialog", Font.BOLD, 14));
        model.setRowCount(0);
        for (User ed : userList.getUsers()){
            Object[] row = new Object[4];
            row[0]= ed;
            row[1] = ed.getUserName();
            row[2] = ed.getPassword();
            row[3] = ed.getEnabledStaus();
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminAddUserJPanel;
    private javax.swing.JPanel AdminHomeJPanel;
    private javax.swing.JPanel AdminPersonDetailsjPanel;
    private javax.swing.JButton BtnLogin1;
    private javax.swing.JButton BtnLogout;
    private javax.swing.JTable PersonTbl;
    private javax.swing.JPanel UserHomeJpanel;
    private javax.swing.JPanel UserProfileJPanel;
    private javax.swing.JTable UserTbl;
    private javax.swing.JButton btnAddUser1;
    private javax.swing.JButton btnAdminSavePerson;
    private javax.swing.JButton btnAdminSavePerson1;
    private javax.swing.JButton btnAdminUpdatePerson;
    private javax.swing.JButton btnBackAdminPersonDetails;
    private javax.swing.JButton btnBackAdminPersonDetails1;
    private javax.swing.JButton btnBackAdminPersonDetails2;
    private javax.swing.JButton btnCancelPersonProfile;
    private javax.swing.JButton btnCancelUser;
    private javax.swing.JButton btnDeletePerson;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnManagePerson1;
    private javax.swing.JButton btnSavePersonProfile;
    private javax.swing.JButton btnSaveUser;
    private javax.swing.JButton btnSearchPerson;
    private javax.swing.JButton btnUpdateProfile;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JButton btnViewPerson;
    private javax.swing.JButton btnViewProfile;
    private javax.swing.JButton btnViewUser1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> genderComboBox1;
    private javax.swing.JComboBox<String> genderComboBox2;
    private javax.swing.JPanel headerjPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonEnabledStatusNo;
    private javax.swing.JRadioButton jRadioButtonEnabledStatusYes;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblAge2;
    private javax.swing.JLabel lblAge5;
    private javax.swing.JLabel lblAge6;
    private javax.swing.JLabel lblAge9;
    private javax.swing.JLabel lblContactNumber1;
    private javax.swing.JLabel lblContactNumber2;
    private javax.swing.JLabel lblContactNumber3;
    private javax.swing.JLabel lblContactNumber4;
    private javax.swing.JLabel lblCountry1;
    private javax.swing.JLabel lblCountry2;
    private javax.swing.JLabel lblEmailId2;
    private javax.swing.JLabel lblEmailId3;
    private javax.swing.JLabel lblEmailId4;
    private javax.swing.JLabel lblEmailId5;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGender1;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblName5;
    private javax.swing.JLabel lblName6;
    private javax.swing.JLabel lblName7;
    private javax.swing.JPanel loginJPanel;
    private javax.swing.JPasswordField passwordTxtFld;
    private javax.swing.JComboBox<String> roleBox;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JTextField txtPUserName;
    private javax.swing.JTextField txtPUserPassword;
    private javax.swing.JTextField txtPerAge;
    private javax.swing.JTextField txtPerAgep;
    private javax.swing.JTextField txtPerCity;
    private javax.swing.JTextField txtPerCityp;
    private javax.swing.JTextField txtPerCountry;
    private javax.swing.JTextField txtPerCountryp;
    private javax.swing.JTextField txtPerEmail;
    private javax.swing.JTextField txtPerEmailp;
    private javax.swing.JTextField txtPerName;
    private javax.swing.JTextField txtPerNamep;
    private javax.swing.JTextField txtPerNuId;
    private javax.swing.JTextField txtPerNuIdp;
    private javax.swing.JTextField txtPerPhoned;
    private javax.swing.JTextField txtPerPhonedp;
    private javax.swing.JTextField txtPerSearch;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtUserNuId;
    private javax.swing.JTextField txtUserPassword;
    private javax.swing.JTextField userNameTxtFld;
    private javax.swing.JPanel workAreajPanel;
    // End of variables declaration//GEN-END:variables
}
