/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.WorkAreas.ProfessorRole;

import Education.Courses.Course;
import Education.Courses.CourseSchedule;
import Education.Education;
import Education.Professor.Professor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class ViewCourseScheduleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewCourseScheduleJPanel
     */
    private JPanel userProcessContainer;
    private Education education;
    private Professor professor;
    DefaultTableModel dtm;
    
    public ViewCourseScheduleJPanel(JPanel userProcessContainer, Education education, Professor professor) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.education = education;
        this.professor = professor;
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for(Course course : education.getCourseDirectory().getCourseList()){
            if(course.getProfessorOwnerId().equals(professor.getProfessorId())){
                model.addElement(course.getName());
            }
        }
        optionsCourse.setModel(model);
        dtm = (DefaultTableModel) tblSchedule.getModel();
        populateTable();
    }
    
    public void populateTable(){
        dtm.setRowCount(0);
    
        for(CourseSchedule courseSchedule: education.getCourseScheduleDirectory().getCourseScheduleList()){
            if(courseSchedule.getTeachingProfessorId().equals(professor.getProfessorId())){
                Object[] row = new Object[7];
                row[0] = courseSchedule;
                for(Course course : education.getCourseDirectory().getCourseList()){
                    if(course.getCourseId().equals(courseSchedule.getCourseId())){
                      row[1] = course.getName();
                      break;
                    }                  
                }
                row[2] = courseSchedule.getTerm() +" "+ courseSchedule.getYear();
                row[3] = courseSchedule.getStartDate();
                row[4] = courseSchedule.getEndDate();
                row[5] = courseSchedule.getLanguage();
                row[6] = courseSchedule.getRegion();
                dtm.addRow(row);
            }
        }
    }
    
    
    public void populateTableBySearch(){
        dtm.setRowCount(0);
        String selectedCourse = String.valueOf(optionsCourse.getSelectedItem());
        String selectedCourseID = "";
        String term = String.valueOf(optionsTerm.getSelectedItem());
        for(Course course : education.getCourseDirectory().getCourseList()){
            if(course.getName().equals(selectedCourse)){
                selectedCourseID = course.getCourseId();
            }
        }
        for(CourseSchedule courseSchedule: education.getCourseScheduleDirectory().getCourseScheduleList()){
            System.out.println(selectedCourseID+" "+courseSchedule.getTerm());
            if(courseSchedule.getCourseId().equals(selectedCourseID) && term.equals(courseSchedule.getTerm() +" "+courseSchedule.getYear())){      
               if(courseSchedule.getTeachingProfessorId().equals(professor.getProfessorId())){
                Object[] row = new Object[7];
                row[0] = courseSchedule;
                for(Course course : education.getCourseDirectory().getCourseList()){
                    if(course.getCourseId().equals(courseSchedule.getCourseId())){
                      row[1] = course.getName();
                      break;
                    }                  
                }
                row[2] = courseSchedule.getTerm() +" "+ courseSchedule.getYear();
                row[3] = courseSchedule.getStartDate();
                row[4] = courseSchedule.getEndDate();
                row[5] = courseSchedule.getLanguage();
                row[6] = courseSchedule.getRegion();
                dtm.addRow(row);
                }
            }
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSchedule = new javax.swing.JTable();
        lblSelectCourse = new javax.swing.JLabel();
        lblSelectTerm = new javax.swing.JLabel();
        optionsCourse = new javax.swing.JComboBox<>();
        optionsTerm = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        btnRemoveSchedule = new javax.swing.JButton();
        btnViewStudents = new javax.swing.JButton();
        btnResetSearch = new javax.swing.JButton();

        tblSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Schedule ID", "Course Name", "Term", "Start Date", "End Date", "Language", "Region"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSchedule);
        if (tblSchedule.getColumnModel().getColumnCount() > 0) {
            tblSchedule.getColumnModel().getColumn(0).setResizable(false);
            tblSchedule.getColumnModel().getColumn(1).setResizable(false);
            tblSchedule.getColumnModel().getColumn(2).setResizable(false);
            tblSchedule.getColumnModel().getColumn(3).setResizable(false);
            tblSchedule.getColumnModel().getColumn(4).setResizable(false);
            tblSchedule.getColumnModel().getColumn(5).setResizable(false);
            tblSchedule.getColumnModel().getColumn(6).setResizable(false);
        }

        lblSelectCourse.setText("Select Course:");

        lblSelectTerm.setText("Select Term:");

        optionsTerm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Spring 2022", "Fall 2022", "Spring 2023", "Fall 2023", "Spring 2024", "Fall 2024" }));
        optionsTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsTermActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnRemoveSchedule.setText("Remove Schedule");
        btnRemoveSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveScheduleActionPerformed(evt);
            }
        });

        btnViewStudents.setText("View Students Ranking");

        btnResetSearch.setText("Reset Search");
        btnResetSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(optionsCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnRemoveSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnViewStudents)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSelectTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optionsTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnResetSearch)
                        .addGap(17, 17, 17))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(optionsCourse)
                        .addGap(3, 3, 3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSelectTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(optionsTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch)
                            .addComponent(btnResetSearch))
                        .addGap(4, 4, 4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemoveSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnViewStudents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(115, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        tblSchedule.setVisible(true);
        btnRemoveSchedule.setVisible(true);
        btnViewStudents.setVisible(true);
        populateTableBySearch();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRemoveScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveScheduleActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSchedule.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row from table first to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            CourseSchedule courseSchedule = (CourseSchedule)tblSchedule.getValueAt(selectedRow, 0);
            for(CourseSchedule courseS : education.getCourseScheduleDirectory().getCourseScheduleList()){
                if(courseS.getCourseId().equals(courseSchedule.getCourseId())){
                    education.getCourseScheduleDirectory().getCourseScheduleList().remove(courseS);
                    JOptionPane.showMessageDialog(this,"Course removed successfuly!");
                    populateTable();
                    return;
                }
            }
        }    
    }//GEN-LAST:event_btnRemoveScheduleActionPerformed

    private void optionsTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsTermActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optionsTermActionPerformed

    private void btnResetSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetSearchActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnResetSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemoveSchedule;
    private javax.swing.JButton btnResetSearch;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewStudents;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSelectCourse;
    private javax.swing.JLabel lblSelectTerm;
    private javax.swing.JComboBox<String> optionsCourse;
    private javax.swing.JComboBox<String> optionsTerm;
    private javax.swing.JTable tblSchedule;
    // End of variables declaration//GEN-END:variables
}
